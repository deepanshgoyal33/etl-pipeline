version: "3.7"
name: redpanda-quickstart-one-broker
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda-0: null
  postgres-data: null # Volume for PostgreSQL data persistence
  kafka_producer_data: null
services:
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.6
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    networks:
      - redpanda_network
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  kafka_producer:
    container_name: kafka-producer
    restart: always
    build:
      context: kafka_producer/  # Path to your producer's directory
      dockerfile: Dockerfile # Assumes you have a Dockerfile in kafka_producer/
    depends_on:
      - redpanda-0
    networks:
      - redpanda_network
    environment:
      BOOTSTRAP_SERVERS: redpanda-0:9092 # Connect to Redpanda
    volumes:
      - kafka_producer_data:/app/data

  dagster:
    build:
      context: .
      dockerfile: Dockerfile.dagster
    container_name: dagster
    ports:
      - "3000:3000"
    depends_on:
      - redpanda-0
      - postgres
      - kafka_producer
    networks:
      - redpanda_network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=redpanda-0:9092
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword